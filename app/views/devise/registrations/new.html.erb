<!-- ————————————————————————————————————————————————————
	Clinician#new 
	_______________________________________________________
	-->
	<!-- header includes  ——————————————————————————————————————————————————  -->
<%= content_for(:header) do %>
	<style type="text/css">
		div#devise_generated_content form { margin-bottom:20px; } 
		div#devise_generated_content a { color:orange; }
		div#devise_generated_content input {margin-bottom:10px;}
		div#center_column { /* override default layout */
			padding-left:40px; 
			padding-top:0px;
			}
		div#center_column div#devise_generated_content h2 { 
			background-color: orange;
			color:white;
			padding: 5px 10px 10px 10px;
			width: 155px;
		}
		div#center_column div#devise_generated_content hr { 
			width:94%;
			float:left;
			margin-top:-11px;
			padding-top:0px;
		}
	</style>
<% end %>

<!-- body includes  ————————————————————————————————————————————————————  -->

<%= content_for(:middleBand) do %>
	<div id="left_column" >

		<!-- menu —————————————————————————————————————————— -->
		<%= render(:partial => 'shared/menu') %>

		<!-- featured products  —————————————————————— -->
		<%= render(:partial => 'shared/featuredProducts') %>
	</div><!-- end of div 'left_column' -->

	<div id="center_column">
		<!-- menu popups: top level categories ——————————————————————————————————— -->
		<%= render(:partial => "/shared/menu_popups") %>
		
		<p class="notice"><%= notice %></p> <!-- needed by devise -->
		<p class="alert"><%= alert %></p> <!-- needed by devise -->
		
		<div id="devise_generated_content">
			<h2>Register</h2>
			<hr></hr></br>
			<!-- Where is resource_name defined?  when is it set?  -->
			<!-- What does it refer to here?  administrators? clinicians? users? admin_users? 
				 My best guess is users.  
			     User has a type field which is used to define the subtypes clinician and administration (implicitly clinic-administrator).
				 I am not setting both the 'type' field to make the Active Record STI implementation of 
				 inheritance work, and also the 'role' field.  The latter should be unnecessary.  Remove the 
				 lines that set this field from the semantic-form-for when remove it from the User class defn. 
			 --> 
			<%= semantic_form_for(resource, :as => resource_name, :url => registration_path(resource_name)) do |f| %>
			  	<%= devise_error_messages! %>
				<% f.inputs do %>
					<% if current_admin_user %>
				
						<!-- In release 1.2 pass in clinic rather than putting drop down here.  Should be available if creating a clinic-administrator tuple -->
						<%= f.input :clinic, :collection => Clinic.order("name ASC").all %>
						<!-- pass in values for first name, last name, email from active admin Clinic record; note: clinic record currently don't have first/last name, just have name; maybe modify 'User' to just use a single name field? or put first/last name in clinic tuple  -->
						<p style="font-weight:bold; margin-bottom:10px;">Clinic Administrator:</p>
						<%= f.input :first_name, :input_html => {:size => '15'} %>
						<%= f.input :last_name, :input_html => {:size => '15'} %>
						<%= f.input :email,:as => :email, :input_html => {:size => '30'} %>
						<%= f.input :password, :as => :password, :input_html => {:size => '15'} %> 
						<%= f.input :password_confirmation,:as => :password, :input_html => {:size => '15'} %>
						<%= f.input :role, :as => :hidden, :input_html => { :value => 'Administrator' } %> <!-- drop when drop this field from the class defn -->
						<%= f.input :type, :as => :hidden, :input_html => { :value => 'Administrator' } %> <!-- DEBUG: not getting set in database. Why? --> 
						<%= f.input :phone, :label => 'Cell Phone', :as => :phone, :input_html => {:size => '30'}  %>
					<% elsif current_user.type == "Administrator" %>
						<!-- register a clinician -->
						<%= f.input :first_name, :input_html => {:size => '15'} %>
						<%= f.input :last_name, :input_html => {:size => '15'} %>
						<%= f.input :email,:as => :email, :input_html => {:size => '30'} %>
						<%= f.input :password, :as => :password, :input_html => {:size => '15'} %> 
						<%= f.input :password_confirmation,:as => :password, :input_html => {:size => '15'} %>
						<%= f.input :role, :as => :hidden, :input_html => { :value => "Clinician" } %>
						<%= f.input :type, :as => :hidden, :input_html => { :value => "Clinician" } %>
						<!-- no address information necessary for clinicians; ship-to and bill-to use the clinic's address -->
					<% else %>
						<!-- register a patient/caregiver -->
						<%= f.input :first_name, :input_html => {:size => '15'} %>
						<%= f.input :last_name, :input_html => {:size => '15'} %>
						<%= f.input :email,:as => :email, :input_html => {:size => '30'} %>
						<%= f.input :password, :as => :password, :input_html => {:size => '15'} %> 
						<%= f.input :password_confirmation,:as => :password, :input_html => {:size => '15'} %>
						<%= f.input :role, :as => :hidden, :input_html => { :value => "Patient" } %>
						<%= f.input :type, :as => :hidden, :input_html => { :value => "Patient" } %>
						<!-- maybe wait until checkout, so doesn't have to enter this twice
							 Better: capture it here and pass it back to Netsuite 
						<#= f.input :address, :input_html => {:size => '30'}  %>
						<#= f.input :address2, :input_html => {:size => '30'}  %>
						<#= f.input :city, :input_html => {:size => '30'}  %>
						<#= f.input :state, :input_html => {:size => '5'}  %>
						<#= f.input :zip, :input_html => {:size => '5'}  %>
						<#= f.input :phone, :as => :phone, :input_html => {:size => '30'}  %>
						-->
					<% end %>
				<% end %>
				<%= f.actions do %>
					<%= f.action :submit, :label => 'Register', :button_html => { :class => 'registerButton'} %>
				<% end %>
				
			<% end %> 


			<%= render :partial => "devise/shared/links" %>
			<p>&nbsp;</p>
			<p>&nbsp;</p>
						
		</div> <!-- end div#devise_generated_content -->
	</div> <!-- end div#center_column -->

<% end %> <!-- end :content_for middleBand -->